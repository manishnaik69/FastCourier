{"ast":null,"code":"// api.js\nimport axios from 'axios';\nconst BASE_URL = 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = token.startsWith('Bearer ') ? token : `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nexport const authService = {\n  login: async credentials => {\n    const {\n      data\n    } = await api.post('/login', credentials);\n    if (data.token) {\n      const token = `Bearer ${data.token}`;\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(data.user));\n    }\n    return data;\n  },\n  register: async formData => {\n    const {\n      data\n    } = await api.post('/register', formData);\n    return data;\n  },\n  verify: async isAdmin => {\n    const endpoint = isAdmin ? '/admin/verify' : '/user/profile';\n    const {\n      data\n    } = await api.get(endpoint);\n    return data;\n  },\n  logout: () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  }\n};\nexport const courierService = {\n  calculatePrice: async (weight, zone = 'default') => {\n    const {\n      data\n    } = await api.post('/calculate-price', {\n      weight,\n      zone\n    });\n    return data.price;\n  },\n  createCourier: async courierData => {\n    const formData = new FormData();\n    Object.keys(courierData).forEach(key => {\n      formData.append(key, courierData[key]);\n    });\n    const {\n      data\n    } = await api.post('/courier', formData);\n    return data;\n  },\n  getCouriers: async () => {\n    const {\n      data\n    } = await api.get('/courier');\n    return data;\n  },\n  getCourierDetails: async id => {\n    const {\n      data\n    } = await api.get(`/courier/${id}`);\n    return data;\n  },\n  trackCourier: async billno => {\n    const {\n      data\n    } = await api.get(`/courier/track/${billno}`);\n    return data;\n  },\n  updateTracking: async (courierId, trackingData) => {\n    const {\n      data\n    } = await api.post('/admin/tracking-update', {\n      courierId,\n      ...trackingData\n    });\n    return data;\n  }\n};\nexport const adminService = {\n  getDashboardStats: async () => {\n    const {\n      data\n    } = await api.get('/admin/dashboard');\n    return data;\n  },\n  getUsers: async () => {\n    const {\n      data\n    } = await api.get('/admin/users');\n    return data;\n  },\n  updateUserStatus: async (userId, status) => {\n    const {\n      data\n    } = await api.put(`/admin/user/${userId}`, {\n      status\n    });\n    return data;\n  },\n  searchCouriers: async query => {\n    const {\n      data\n    } = await api.get('/admin/search', {\n      params: {\n        query\n      }\n    });\n    return data;\n  },\n  getActivityLogs: async () => {\n    const {\n      data\n    } = await api.get('/admin/logs');\n    return data;\n  },\n  getContacts: async () => {\n    const {\n      data\n    } = await api.get('/admin/contacts');\n    return data;\n  },\n  updateContact: async (id, updateData) => {\n    const {\n      data\n    } = await api.put(`/admin/contact/${id}`, updateData);\n    return data;\n  },\n  getPricing: async () => {\n    const {\n      data\n    } = await api.get('/admin/pricing');\n    return data;\n  },\n  updatePricing: async pricingData => {\n    const {\n      data\n    } = await api.post('/admin/pricing', pricingData);\n    return data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","BASE_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","startsWith","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authService","login","credentials","data","post","setItem","JSON","stringify","user","register","formData","verify","isAdmin","endpoint","get","logout","courierService","calculatePrice","weight","zone","price","createCourier","courierData","FormData","Object","keys","forEach","key","append","getCouriers","getCourierDetails","id","trackCourier","billno","updateTracking","courierId","trackingData","adminService","getDashboardStats","getUsers","updateUserStatus","userId","put","searchCouriers","query","params","getActivityLogs","getContacts","updateContact","updateData","getPricing","updatePricing","pricingData"],"sources":["C:/Users/Asus/Desktop/cms/manish/manish1/frontend/src/services/api.js"],"sourcesContent":["// api.js\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = 'http://localhost:5000/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: BASE_URL,\r\n  headers: { 'Content-Type': 'application/json' }\r\n});\r\n\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = token.startsWith('Bearer ') ? token : `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const authService = {\r\n  login: async (credentials) => {\r\n    const { data } = await api.post('/login', credentials);\r\n    if (data.token) {\r\n      const token = `Bearer ${data.token}`;\r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('user', JSON.stringify(data.user));\r\n    }\r\n    return data;\r\n  },\r\n\r\n  register: async (formData) => {\r\n    const { data } = await api.post('/register', formData);\r\n    return data;\r\n  },\r\n\r\n  verify: async (isAdmin) => {\r\n    const endpoint = isAdmin ? '/admin/verify' : '/user/profile';\r\n    const { data } = await api.get(endpoint);\r\n    return data;\r\n  },\r\n\r\n  logout: () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n  }\r\n};\r\n\r\nexport const courierService = {\r\n  calculatePrice: async (weight, zone = 'default') => {\r\n    const { data } = await api.post('/calculate-price', { weight, zone });\r\n    return data.price;\r\n  },\r\n\r\n  createCourier: async (courierData) => {\r\n    const formData = new FormData();\r\n    Object.keys(courierData).forEach(key => {\r\n      formData.append(key, courierData[key]);\r\n    });\r\n    const { data } = await api.post('/courier', formData);\r\n    return data;\r\n  },\r\n\r\n  getCouriers: async () => {\r\n    const { data } = await api.get('/courier');\r\n    return data;\r\n  },\r\n\r\n  getCourierDetails: async (id) => {\r\n    const { data } = await api.get(`/courier/${id}`);\r\n    return data;\r\n  },\r\n\r\n  trackCourier: async (billno) => {\r\n    const { data } = await api.get(`/courier/track/${billno}`);\r\n    return data;\r\n  },\r\n\r\n  updateTracking: async (courierId, trackingData) => {\r\n    const { data } = await api.post('/admin/tracking-update', {\r\n      courierId,\r\n      ...trackingData\r\n    });\r\n    return data;\r\n  }\r\n};\r\n\r\nexport const adminService = {\r\n  getDashboardStats: async () => {\r\n    const { data } = await api.get('/admin/dashboard');\r\n    return data;\r\n  },\r\n\r\n  getUsers: async () => {\r\n    const { data } = await api.get('/admin/users');\r\n    return data;\r\n  },\r\n\r\n  updateUserStatus: async (userId, status) => {\r\n    const { data } = await api.put(`/admin/user/${userId}`, { status });\r\n    return data;\r\n  },\r\n\r\n  searchCouriers: async (query) => {\r\n    const { data } = await api.get('/admin/search', { params: { query } });\r\n    return data;\r\n  },\r\n\r\n  getActivityLogs: async () => {\r\n    const { data } = await api.get('/admin/logs');\r\n    return data;\r\n  },\r\n\r\n  getContacts: async () => {\r\n    const { data } = await api.get('/admin/contacts');\r\n    return data;\r\n  },\r\n\r\n  updateContact: async (id, updateData) => {\r\n    const { data } = await api.put(`/admin/contact/${id}`, updateData);\r\n    return data;\r\n  },\r\n\r\n  getPricing: async () => {\r\n    const { data } = await api.get('/admin/pricing');\r\n    return data;\r\n  },\r\n\r\n  updatePricing: async (pricingData) => {\r\n    const { data } = await api.post('/admin/pricing', pricingData);\r\n    return data;\r\n  }\r\n};\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}