{"ast":null,"code":"var _s = $RefreshSig$();\n// src/hooks/useCourier.js\nimport { useState, useCallback } from 'react';\nimport { useAuth } from './useAuth';\nimport api from '../services/api';\nimport toast from 'react-hot-toast';\nexport const useCourier = () => {\n  _s();\n  const [couriers, setCouriers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const {\n    user\n  } = useAuth();\n  const getAuthHeader = () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      throw new Error('Token missing');\n    }\n    return token.startsWith('Bearer ') ? token : `Bearer ${token}`;\n  };\n  const fetchCouriers = useCallback(async (filters = {}) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const endpoint = user !== null && user !== void 0 && user.isAdmin ? '/admin/couriers' : '/courier';\n      const {\n        data\n      } = await api.get(endpoint, {\n        params: filters\n      });\n      setCouriers(data);\n    } catch (err) {\n      console.error('Fetch couriers error:', err);\n      setError('Failed to fetch couriers');\n      toast.error('Failed to fetch couriers');\n    } finally {\n      setLoading(false);\n    }\n  }, [user === null || user === void 0 ? void 0 : user.isAdmin]);\n  const updateTracking = async (courierId, trackingData) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const authHeader = getAuthHeader();\n      const response = await fetch('http://localhost:5000/api/admin/tracking-update', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': authHeader\n        },\n        body: JSON.stringify({\n          courierId,\n          ...trackingData\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Failed to update tracking');\n      }\n      await fetchCouriers();\n      return data;\n    } catch (err) {\n      console.error('Update tracking error:', err);\n      setError(err.message || 'Failed to update tracking status');\n      toast.error(err.message || 'Failed to update tracking status');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  return {\n    couriers,\n    loading,\n    error,\n    fetchCouriers,\n    updateTracking\n  };\n};\n_s(useCourier, \"0QDw3tIf1TPzoAAwBV2/E8Q+YV8=\", false, function () {\n  return [useAuth];\n});\nexport default useCourier;","map":{"version":3,"names":["useState","useCallback","useAuth","api","toast","useCourier","_s","couriers","setCouriers","loading","setLoading","error","setError","user","getAuthHeader","token","localStorage","getItem","Error","startsWith","fetchCouriers","filters","endpoint","isAdmin","data","get","params","err","console","updateTracking","courierId","trackingData","authHeader","response","fetch","method","headers","body","JSON","stringify","json","ok","message"],"sources":["C:/Users/Asus/Desktop/cms/manish/manish1/frontend/src/hooks/useCourier.js"],"sourcesContent":["// src/hooks/useCourier.js\r\nimport { useState, useCallback } from 'react';\r\nimport { useAuth } from './useAuth';\r\nimport api from '../services/api';\r\nimport toast from 'react-hot-toast';\r\n\r\nexport const useCourier = () => {\r\n  const [couriers, setCouriers] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const { user } = useAuth();\r\n\r\n  const getAuthHeader = () => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      throw new Error('Token missing');\r\n    }\r\n    return token.startsWith('Bearer ') ? token : `Bearer ${token}`;\r\n  };\r\n\r\n  const fetchCouriers = useCallback(async (filters = {}) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const endpoint = user?.isAdmin ? '/admin/couriers' : '/courier';\r\n      const { data } = await api.get(endpoint, { params: filters });\r\n      setCouriers(data);\r\n    } catch (err) {\r\n      console.error('Fetch couriers error:', err);\r\n      setError('Failed to fetch couriers');\r\n      toast.error('Failed to fetch couriers');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [user?.isAdmin]);\r\n\r\n  const updateTracking = async (courierId, trackingData) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const authHeader = getAuthHeader();\r\n\r\n      const response = await fetch('http://localhost:5000/api/admin/tracking-update', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': authHeader\r\n        },\r\n        body: JSON.stringify({\r\n          courierId,\r\n          ...trackingData\r\n        })\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Failed to update tracking');\r\n      }\r\n\r\n      await fetchCouriers();\r\n      return data;\r\n    } catch (err) {\r\n      console.error('Update tracking error:', err);\r\n      setError(err.message || 'Failed to update tracking status');\r\n      toast.error(err.message || 'Failed to update tracking status');\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return {\r\n    couriers,\r\n    loading,\r\n    error,\r\n    fetchCouriers,\r\n    updateTracking\r\n  };\r\n};\r\n\r\nexport default useCourier;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}