{"ast":null,"code":"export const adminService = {\n  getDashboardStats: async () => {\n    const response = await fetch(`${API_URL}/admin/dashboard`, {\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n      }\n    });\n    const data = await response.json();\n    if (!response.ok) {\n      throw new Error(data.message || 'Failed to fetch dashboard stats');\n    }\n    return data;\n  },\n  getUsers: async () => {\n    const response = await fetch(`${API_URL}/admin/users`, {\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n      }\n    });\n    const data = await response.json();\n    if (!response.ok) {\n      throw new Error(data.message || 'Failed to fetch users');\n    }\n    return data;\n  },\n  updateUserStatus: async (userId, status) => {\n    const response = await fetch(`${API_URL}/admin/user/${userId}`, {\n      method: 'PUT',\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('authToken')}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        status\n      })\n    });\n    const data = await response.json();\n    if (!response.ok) {\n      throw new Error(data.message || 'Failed to update user status');\n    }\n    return data;\n  },\n  getActivityLogs: async () => {\n    const response = await fetch(`${API_URL}/admin/logs`, {\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n      }\n    });\n    const data = await response.json();\n    if (!response.ok) {\n      throw new Error(data.message || 'Failed to fetch activity logs');\n    }\n    return data;\n  },\n  getPricingRules: async () => {\n    const response = await fetch(`${API_URL}/admin/pricing`, {\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n      }\n    });\n    const data = await response.json();\n    if (!response.ok) {\n      throw new Error(data.message || 'Failed to fetch pricing rules');\n    }\n    return data;\n  },\n  updatePricing: async pricingData => {\n    const response = await fetch(`${API_URL}/admin/pricing`, {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('authToken')}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(pricingData)\n    });\n    const data = await response.json();\n    if (!response.ok) {\n      throw new Error(data.message || 'Failed to update pricing');\n    }\n    return data;\n  }\n};","map":{"version":3,"names":["adminService","getDashboardStats","response","fetch","API_URL","headers","localStorage","getItem","data","json","ok","Error","message","getUsers","updateUserStatus","userId","status","method","body","JSON","stringify","getActivityLogs","getPricingRules","updatePricing","pricingData"],"sources":["C:/Users/Asus/Desktop/cms/manish/manish1/frontend/src/services/adminService.js"],"sourcesContent":["export const adminService = {\r\n    getDashboardStats: async () => {\r\n      const response = await fetch(`${API_URL}/admin/dashboard`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('authToken')}`\r\n        }\r\n      });\r\n  \r\n      const data = await response.json();\r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Failed to fetch dashboard stats');\r\n      }\r\n  \r\n      return data;\r\n    },\r\n  \r\n    getUsers: async () => {\r\n      const response = await fetch(`${API_URL}/admin/users`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('authToken')}`\r\n        }\r\n      });\r\n  \r\n      const data = await response.json();\r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Failed to fetch users');\r\n      }\r\n  \r\n      return data;\r\n    },\r\n  \r\n    updateUserStatus: async (userId, status) => {\r\n      const response = await fetch(`${API_URL}/admin/user/${userId}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('authToken')}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ status })\r\n      });\r\n  \r\n      const data = await response.json();\r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Failed to update user status');\r\n      }\r\n  \r\n      return data;\r\n    },\r\n  \r\n    getActivityLogs: async () => {\r\n      const response = await fetch(`${API_URL}/admin/logs`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('authToken')}`\r\n        }\r\n      });\r\n  \r\n      const data = await response.json();\r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Failed to fetch activity logs');\r\n      }\r\n  \r\n      return data;\r\n    },\r\n  \r\n    getPricingRules: async () => {\r\n      const response = await fetch(`${API_URL}/admin/pricing`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('authToken')}`\r\n        }\r\n      });\r\n  \r\n      const data = await response.json();\r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Failed to fetch pricing rules');\r\n      }\r\n  \r\n      return data;\r\n    },\r\n  \r\n    updatePricing: async (pricingData) => {\r\n      const response = await fetch(`${API_URL}/admin/pricing`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('authToken')}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(pricingData)\r\n      });\r\n  \r\n      const data = await response.json();\r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Failed to update pricing');\r\n      }\r\n  \r\n      return data;\r\n    }\r\n  };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}