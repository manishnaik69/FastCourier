{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\cms\\\\manish\\\\manish1\\\\frontend\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext({\n  user: null,\n  loading: true,\n  error: null,\n  login: () => {},\n  logout: () => {},\n  register: () => {},\n  updateProfile: () => {},\n  isAuthenticated: false,\n  isAdmin: false,\n  clearError: () => {}\n});\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n  const checkAuthStatus = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const storedUser = localStorage.getItem('user');\n      if (!token || !storedUser) {\n        setLoading(false);\n        setUser(null);\n        navigate('/login');\n        return;\n      }\n      const parsedUser = JSON.parse(storedUser);\n      const authToken = token.startsWith('Bearer ') ? token : `Bearer ${token}`;\n      try {\n        const endpoint = parsedUser.isAdmin ? 'http://localhost:5000/api/admin/verify' : 'http://localhost:5000/api/user/profile';\n        const response = await fetch(endpoint, {\n          headers: {\n            'Authorization': authToken,\n            'Content-Type': 'application/json'\n          }\n        });\n        if (!response.ok) {\n          throw new Error('Invalid session');\n        }\n        const data = await response.json();\n        const updatedUser = {\n          ...parsedUser,\n          ...data.user,\n          isAdmin: parsedUser.isAdmin,\n          type: parsedUser.isAdmin ? 'admin' : 'user'\n        };\n        setUser(updatedUser);\n        localStorage.setItem('user', JSON.stringify(updatedUser));\n        if (parsedUser.isAdmin) {\n          navigate('/admin/dashboard');\n        } else {\n          navigate('/dashboard');\n        }\n      } catch (error) {\n        throw new Error('Invalid or inactive user');\n      }\n    } catch (err) {\n      console.error('Auth check failed:', err);\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      setUser(null);\n      toast.error(err.message || 'Authentication failed');\n      navigate('/login');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async credentials => {\n    try {\n      setError(null);\n      setLoading(true);\n      const response = await fetch('http://localhost:5000/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(credentials)\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Login failed');\n      }\n\n      // Determine if user is admin\n      const isAdminUser = data.user && (data.user.isAdmin || data.user.role === 'admin' || data.user.type === 'admin');\n\n      // Prepare user data\n      const userData = {\n        ...data.user,\n        isAdmin: isAdminUser,\n        type: isAdminUser ? 'admin' : 'user'\n      };\n\n      // Store auth data\n      localStorage.setItem('token', `Bearer ${data.token}`);\n      localStorage.setItem('user', JSON.stringify(userData));\n      setUser(userData);\n      toast.success('Login successful!');\n\n      // Navigate based on user type\n      if (isAdminUser) {\n        navigate('/admin/dashboard', {\n          replace: true\n        });\n      } else {\n        navigate('/dashboard', {\n          replace: true\n        });\n      }\n      return {\n        ...data,\n        user: userData\n      };\n    } catch (err) {\n      console.error('Login error:', err);\n      setError(err.message);\n      toast.error(err.message);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const register = async userData => {\n    try {\n      setError(null);\n      setLoading(true);\n      const formData = new FormData();\n      Object.keys(userData).forEach(key => {\n        if (userData[key] !== null && userData[key] !== undefined) {\n          if (key === 'profileImage' && userData[key] instanceof File) {\n            formData.append('profileImage', userData[key]);\n          } else {\n            formData.append(key, userData[key]);\n          }\n        }\n      });\n      const response = await fetch('http://localhost:5000/api/register', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Registration failed');\n      }\n      toast.success('Registration successful! Please login.');\n      navigate('/login', {\n        state: {\n          message: 'Registration successful! Please login.',\n          type: 'success'\n        }\n      });\n      return data;\n    } catch (err) {\n      setError(err.message);\n      toast.error(err.message);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const updateProfile = async profileData => {\n    try {\n      setError(null);\n      setLoading(true);\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('Authentication required');\n      }\n      const formData = new FormData();\n      Object.keys(profileData).forEach(key => {\n        if (profileData[key] !== null && profileData[key] !== undefined) {\n          if (key === 'profileImage' && profileData[key] instanceof File) {\n            formData.append('profileImage', profileData[key]);\n          } else {\n            formData.append(key, profileData[key]);\n          }\n        }\n      });\n      const endpoint = user !== null && user !== void 0 && user.isAdmin ? 'http://localhost:5000/api/admin/profile' : 'http://localhost:5000/api/user/profile';\n      const response = await fetch(endpoint, {\n        method: 'PUT',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        },\n        body: formData\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Failed to update profile');\n      }\n      const updatedUser = {\n        ...user,\n        ...data.user\n      };\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n      setUser(updatedUser);\n      toast.success('Profile updated successfully');\n      return data;\n    } catch (err) {\n      setError(err.message);\n      toast.error(err.message);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n    toast.success('Logged out successfully');\n    navigate('/login');\n  };\n  const clearError = () => {\n    setError(null);\n  };\n  const value = {\n    user,\n    loading,\n    error,\n    login,\n    logout,\n    register,\n    updateProfile,\n    clearError,\n    isAuthenticated: !!user,\n    isAdmin: (user === null || user === void 0 ? void 0 : user.isAdmin) || false\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 275,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"d1+zLFPuYCTHzOWgvgMVqQqBcrg=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = React.useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useNavigate","toast","jsxDEV","_jsxDEV","AuthContext","user","loading","error","login","logout","register","updateProfile","isAuthenticated","isAdmin","clearError","AuthProvider","children","_s","setUser","setLoading","setError","navigate","checkAuthStatus","token","localStorage","getItem","storedUser","parsedUser","JSON","parse","authToken","startsWith","endpoint","response","fetch","headers","ok","Error","data","json","updatedUser","type","setItem","stringify","err","console","removeItem","message","credentials","method","body","isAdminUser","role","userData","success","replace","formData","FormData","Object","keys","forEach","key","undefined","File","append","state","profileData","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","useContext","$RefreshReg$"],"sources":["C:/Users/Asus/Desktop/cms/manish/manish1/frontend/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport toast from 'react-hot-toast';\r\n\r\nexport const AuthContext = createContext({\r\n  user: null,\r\n  loading: true,\r\n  error: null,\r\n  login: () => {},\r\n  logout: () => {},\r\n  register: () => {},\r\n  updateProfile: () => {},\r\n  isAuthenticated: false,\r\n  isAdmin: false,\r\n  clearError: () => {}\r\n});\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    checkAuthStatus();\r\n  }, []);\r\n\r\n  const checkAuthStatus = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const storedUser = localStorage.getItem('user');\r\n      \r\n      if (!token || !storedUser) {\r\n        setLoading(false);\r\n        setUser(null);\r\n        navigate('/login');\r\n        return;\r\n      }\r\n\r\n      const parsedUser = JSON.parse(storedUser);\r\n      const authToken = token.startsWith('Bearer ') ? token : `Bearer ${token}`;\r\n\r\n      try {\r\n        const endpoint = parsedUser.isAdmin ? \r\n          'http://localhost:5000/api/admin/verify' : \r\n          'http://localhost:5000/api/user/profile';\r\n\r\n        const response = await fetch(endpoint, {\r\n          headers: {\r\n            'Authorization': authToken,\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Invalid session');\r\n        }\r\n\r\n        const data = await response.json();\r\n        \r\n        const updatedUser = {\r\n          ...parsedUser,\r\n          ...data.user,\r\n          isAdmin: parsedUser.isAdmin,\r\n          type: parsedUser.isAdmin ? 'admin' : 'user'\r\n        };\r\n\r\n        setUser(updatedUser);\r\n        localStorage.setItem('user', JSON.stringify(updatedUser));\r\n\r\n        if (parsedUser.isAdmin) {\r\n          navigate('/admin/dashboard');\r\n        } else {\r\n          navigate('/dashboard');\r\n        }\r\n      } catch (error) {\r\n        throw new Error('Invalid or inactive user');\r\n      }\r\n    } catch (err) {\r\n      console.error('Auth check failed:', err);\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      setUser(null);\r\n      toast.error(err.message || 'Authentication failed');\r\n      navigate('/login');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n\r\n  const login = async (credentials) => {\r\n    try {\r\n      setError(null);\r\n      setLoading(true);\r\n\r\n      const response = await fetch('http://localhost:5000/api/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(credentials)\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Login failed');\r\n      }\r\n\r\n      // Determine if user is admin\r\n      const isAdminUser = data.user && (\r\n        data.user.isAdmin || \r\n        data.user.role === 'admin' || \r\n        data.user.type === 'admin'\r\n      );\r\n\r\n      // Prepare user data\r\n      const userData = {\r\n        ...data.user,\r\n        isAdmin: isAdminUser,\r\n        type: isAdminUser ? 'admin' : 'user'\r\n      };\r\n\r\n      // Store auth data\r\n      localStorage.setItem('token', `Bearer ${data.token}`);\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n      setUser(userData);\r\n\r\n      toast.success('Login successful!');\r\n\r\n      // Navigate based on user type\r\n      if (isAdminUser) {\r\n        navigate('/admin/dashboard', { replace: true });\r\n      } else {\r\n        navigate('/dashboard', { replace: true });\r\n      }\r\n\r\n      return { ...data, user: userData };\r\n    } catch (err) {\r\n      console.error('Login error:', err);\r\n      setError(err.message);\r\n      toast.error(err.message);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      setError(null);\r\n      setLoading(true);\r\n\r\n      const formData = new FormData();\r\n      Object.keys(userData).forEach(key => {\r\n        if (userData[key] !== null && userData[key] !== undefined) {\r\n          if (key === 'profileImage' && userData[key] instanceof File) {\r\n            formData.append('profileImage', userData[key]);\r\n          } else {\r\n            formData.append(key, userData[key]);\r\n          }\r\n        }\r\n      });\r\n\r\n      const response = await fetch('http://localhost:5000/api/register', {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Registration failed');\r\n      }\r\n\r\n      toast.success('Registration successful! Please login.');\r\n      navigate('/login', { \r\n        state: { \r\n          message: 'Registration successful! Please login.',\r\n          type: 'success'\r\n        }\r\n      });\r\n\r\n      return data;\r\n    } catch (err) {\r\n      setError(err.message);\r\n      toast.error(err.message);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateProfile = async (profileData) => {\r\n    try {\r\n      setError(null);\r\n      setLoading(true);\r\n\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        throw new Error('Authentication required');\r\n      }\r\n\r\n      const formData = new FormData();\r\n      Object.keys(profileData).forEach(key => {\r\n        if (profileData[key] !== null && profileData[key] !== undefined) {\r\n          if (key === 'profileImage' && profileData[key] instanceof File) {\r\n            formData.append('profileImage', profileData[key]);\r\n          } else {\r\n            formData.append(key, profileData[key]);\r\n          }\r\n        }\r\n      });\r\n\r\n      const endpoint = user?.isAdmin ?\r\n        'http://localhost:5000/api/admin/profile' :\r\n        'http://localhost:5000/api/user/profile';\r\n\r\n      const response = await fetch(endpoint, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        },\r\n        body: formData\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Failed to update profile');\r\n      }\r\n\r\n      const updatedUser = { ...user, ...data.user };\r\n      localStorage.setItem('user', JSON.stringify(updatedUser));\r\n      setUser(updatedUser);\r\n      toast.success('Profile updated successfully');\r\n\r\n      return data;\r\n    } catch (err) {\r\n      setError(err.message);\r\n      toast.error(err.message);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    setUser(null);\r\n    toast.success('Logged out successfully');\r\n    navigate('/login');\r\n  };\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    error,\r\n    login,\r\n    logout,\r\n    register,\r\n    updateProfile,\r\n    clearError,\r\n    isAuthenticated: !!user,\r\n    isAdmin: user?.isAdmin || false\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = React.useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default AuthProvider;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}