{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\cms\\\\manish\\\\manish1\\\\frontend\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext({\n  user: null,\n  loading: true,\n  error: null,\n  login: () => {},\n  logout: () => {},\n  register: () => {},\n  updateProfile: () => {},\n  isAuthenticated: false,\n  isAdmin: false,\n  clearError: () => {}\n});\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n  const checkAuthStatus = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const storedUser = localStorage.getItem('user');\n      if (!token || !storedUser) {\n        setLoading(false);\n        return;\n      }\n      const parsedUser = JSON.parse(storedUser);\n      const endpoint = parsedUser.isAdmin ? 'http://localhost:5000/api/admin/verify' : 'http://localhost:5000/api/user/profile';\n      const response = await fetch(endpoint, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Session expired');\n      }\n      const data = await response.json();\n      if (data.user) {\n        setUser({\n          ...parsedUser,\n          ...data.user\n        });\n      } else {\n        setUser(parsedUser);\n      }\n    } catch (err) {\n      console.error('Auth check failed:', err);\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      setUser(null);\n      navigate('/login');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async credentials => {\n    try {\n      setError(null);\n      setLoading(true);\n      const response = await fetch('http://localhost:5000/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(credentials)\n      });\n      const data = await response.json();\n      console.log('Login response:', data);\n      if (!response.ok) {\n        throw new Error(data.message || 'Login failed');\n      }\n      if (!data.user || !data.token) {\n        throw new Error('Invalid server response');\n      }\n      localStorage.setItem('token', `Bearer ${data.token}`);\n      localStorage.setItem('user', JSON.stringify(data.user));\n      setUser(data.user);\n      toast.success('Login successful!');\n      if (data.user.isAdmin) {\n        console.log('Redirecting to admin dashboard');\n        navigate('/admin/dashboard', {\n          replace: true\n        });\n      } else {\n        console.log('Redirecting to user dashboard');\n        navigate('/dashboard', {\n          replace: true\n        });\n      }\n      return data;\n    } catch (err) {\n      console.error('Login error:', err);\n      setError(err.message);\n      toast.error(err.message);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const register = async userData => {\n    try {\n      setError(null);\n      setLoading(true);\n      const formData = new FormData();\n      Object.keys(userData).forEach(key => {\n        if (userData[key] !== null && userData[key] !== undefined) {\n          if (key === 'profileImage' && userData[key] instanceof File) {\n            formData.append('profileImage', userData[key]);\n          } else {\n            formData.append(key, userData[key]);\n          }\n        }\n      });\n      const response = await fetch('http://localhost:5000/api/register', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Registration failed');\n      }\n      toast.success('Registration successful! Please login.');\n      navigate('/login', {\n        state: {\n          message: 'Registration successful! Please login.'\n        }\n      });\n      return data;\n    } catch (err) {\n      setError(err.message);\n      toast.error(err.message);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const updateProfile = async profileData => {\n    try {\n      setError(null);\n      setLoading(true);\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('Authentication required');\n      }\n      const formData = new FormData();\n      Object.keys(profileData).forEach(key => {\n        if (profileData[key] !== null && profileData[key] !== undefined) {\n          if (key === 'profileImage' && profileData[key] instanceof File) {\n            formData.append('profileImage', profileData[key]);\n          } else {\n            formData.append(key, profileData[key]);\n          }\n        }\n      });\n      const endpoint = user !== null && user !== void 0 && user.isAdmin ? 'http://localhost:5000/api/admin/profile' : 'http://localhost:5000/api/user/profile';\n      const response = await fetch(endpoint, {\n        method: 'PUT',\n        headers: {\n          'Authorization': token\n        },\n        body: formData\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Failed to update profile');\n      }\n      const updatedUser = {\n        ...user,\n        ...data.user\n      };\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n      setUser(updatedUser);\n      toast.success('Profile updated successfully');\n      return data;\n    } catch (err) {\n      setError(err.message);\n      toast.error(err.message);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n    toast.success('Logged out successfully');\n    navigate('/login');\n  };\n  const clearError = () => {\n    setError(null);\n  };\n  const refreshUser = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token || !user) return;\n      const endpoint = user.isAdmin ? 'http://localhost:5000/api/admin/profile' : 'http://localhost:5000/api/user/profile';\n      const response = await fetch(endpoint, {\n        headers: {\n          'Authorization': token,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) throw new Error('Failed to refresh user data');\n      const data = await response.json();\n      const updatedUser = {\n        ...user,\n        ...data.user\n      };\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n      setUser(updatedUser);\n    } catch (err) {\n      console.error('Refresh user error:', err);\n      if (err.message === 'Session expired') {\n        logout();\n      }\n    }\n  };\n  useEffect(() => {\n    if (user) {\n      const refreshInterval = setInterval(refreshUser, 5 * 60 * 1000); // Refresh every 5 minutes\n      return () => clearInterval(refreshInterval);\n    }\n  }, [user]);\n  const value = {\n    user,\n    loading,\n    error,\n    login,\n    logout,\n    register,\n    updateProfile,\n    clearError,\n    refreshUser,\n    isAuthenticated: !!user,\n    isAdmin: (user === null || user === void 0 ? void 0 : user.isAdmin) || false\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 282,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"56tqztHvoTQUa3/lP6A2NnSU+xY=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = React.useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useNavigate","toast","api","jsxDEV","_jsxDEV","AuthContext","user","loading","error","login","logout","register","updateProfile","isAuthenticated","isAdmin","clearError","AuthProvider","children","_s","setUser","setLoading","setError","navigate","checkAuthStatus","token","localStorage","getItem","storedUser","parsedUser","JSON","parse","endpoint","response","fetch","headers","ok","Error","data","json","err","console","removeItem","credentials","method","body","stringify","log","message","setItem","success","replace","userData","formData","FormData","Object","keys","forEach","key","undefined","File","append","state","profileData","updatedUser","refreshUser","refreshInterval","setInterval","clearInterval","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","useContext","$RefreshReg$"],"sources":["C:/Users/Asus/Desktop/cms/manish/manish1/frontend/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport toast from 'react-hot-toast';\r\nimport api from '../services/api';\r\n\r\nexport const AuthContext = createContext({\r\n  user: null,\r\n  loading: true,\r\n  error: null,\r\n  login: () => {},\r\n  logout: () => {},\r\n  register: () => {},\r\n  updateProfile: () => {},\r\n  isAuthenticated: false,\r\n  isAdmin: false,\r\n  clearError: () => {}\r\n});\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    checkAuthStatus();\r\n  }, []);\r\n\r\n  const checkAuthStatus = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const storedUser = localStorage.getItem('user');\r\n      \r\n      if (!token || !storedUser) {\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      const parsedUser = JSON.parse(storedUser);\r\n      \r\n      const endpoint = parsedUser.isAdmin ? \r\n        'http://localhost:5000/api/admin/verify' : \r\n        'http://localhost:5000/api/user/profile';\r\n\r\n      const response = await fetch(endpoint, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Session expired');\r\n      }\r\n\r\n      const data = await response.json();\r\n      if (data.user) {\r\n        setUser({ ...parsedUser, ...data.user });\r\n      } else {\r\n        setUser(parsedUser);\r\n      }\r\n    } catch (err) {\r\n      console.error('Auth check failed:', err);\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      setUser(null);\r\n      navigate('/login');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (credentials) => {\r\n    try {\r\n      setError(null);\r\n      setLoading(true);\r\n\r\n      const response = await fetch('http://localhost:5000/api/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(credentials)\r\n      });\r\n\r\n      const data = await response.json();\r\n      console.log('Login response:', data);\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Login failed');\r\n      }\r\n\r\n      if (!data.user || !data.token) {\r\n        throw new Error('Invalid server response');\r\n      }\r\n\r\n      localStorage.setItem('token', `Bearer ${data.token}`);\r\n      localStorage.setItem('user', JSON.stringify(data.user));\r\n      setUser(data.user);\r\n\r\n      toast.success('Login successful!');\r\n\r\n      if (data.user.isAdmin) {\r\n        console.log('Redirecting to admin dashboard');\r\n        navigate('/admin/dashboard', { replace: true });\r\n      } else {\r\n        console.log('Redirecting to user dashboard');\r\n        navigate('/dashboard', { replace: true });\r\n      }\r\n\r\n      return data;\r\n    } catch (err) {\r\n      console.error('Login error:', err);\r\n      setError(err.message);\r\n      toast.error(err.message);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      setError(null);\r\n      setLoading(true);\r\n\r\n      const formData = new FormData();\r\n      Object.keys(userData).forEach(key => {\r\n        if (userData[key] !== null && userData[key] !== undefined) {\r\n          if (key === 'profileImage' && userData[key] instanceof File) {\r\n            formData.append('profileImage', userData[key]);\r\n          } else {\r\n            formData.append(key, userData[key]);\r\n          }\r\n        }\r\n      });\r\n\r\n      const response = await fetch('http://localhost:5000/api/register', {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Registration failed');\r\n      }\r\n\r\n      toast.success('Registration successful! Please login.');\r\n      navigate('/login', { \r\n        state: { message: 'Registration successful! Please login.' }\r\n      });\r\n\r\n      return data;\r\n    } catch (err) {\r\n      setError(err.message);\r\n      toast.error(err.message);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateProfile = async (profileData) => {\r\n    try {\r\n      setError(null);\r\n      setLoading(true);\r\n\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        throw new Error('Authentication required');\r\n      }\r\n\r\n      const formData = new FormData();\r\n      Object.keys(profileData).forEach(key => {\r\n        if (profileData[key] !== null && profileData[key] !== undefined) {\r\n          if (key === 'profileImage' && profileData[key] instanceof File) {\r\n            formData.append('profileImage', profileData[key]);\r\n          } else {\r\n            formData.append(key, profileData[key]);\r\n          }\r\n        }\r\n      });\r\n\r\n      const endpoint = user?.isAdmin ?\r\n        'http://localhost:5000/api/admin/profile' :\r\n        'http://localhost:5000/api/user/profile';\r\n\r\n      const response = await fetch(endpoint, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Authorization': token\r\n        },\r\n        body: formData\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Failed to update profile');\r\n      }\r\n\r\n      const updatedUser = { ...user, ...data.user };\r\n      localStorage.setItem('user', JSON.stringify(updatedUser));\r\n      setUser(updatedUser);\r\n      toast.success('Profile updated successfully');\r\n\r\n      return data;\r\n    } catch (err) {\r\n      setError(err.message);\r\n      toast.error(err.message);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    setUser(null);\r\n    toast.success('Logged out successfully');\r\n    navigate('/login');\r\n  };\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  const refreshUser = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token || !user) return;\r\n\r\n      const endpoint = user.isAdmin ?\r\n        'http://localhost:5000/api/admin/profile' :\r\n        'http://localhost:5000/api/user/profile';\r\n\r\n      const response = await fetch(endpoint, {\r\n        headers: {\r\n          'Authorization': token,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      if (!response.ok) throw new Error('Failed to refresh user data');\r\n\r\n      const data = await response.json();\r\n      const updatedUser = { ...user, ...data.user };\r\n      localStorage.setItem('user', JSON.stringify(updatedUser));\r\n      setUser(updatedUser);\r\n    } catch (err) {\r\n      console.error('Refresh user error:', err);\r\n      if (err.message === 'Session expired') {\r\n        logout();\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      const refreshInterval = setInterval(refreshUser, 5 * 60 * 1000); // Refresh every 5 minutes\r\n      return () => clearInterval(refreshInterval);\r\n    }\r\n  }, [user]);\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    error,\r\n    login,\r\n    logout,\r\n    register,\r\n    updateProfile,\r\n    clearError,\r\n    refreshUser,\r\n    isAuthenticated: !!user,\r\n    isAdmin: user?.isAdmin || false\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = React.useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default AuthProvider;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}