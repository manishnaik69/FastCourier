{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\cms\\\\manish\\\\manish1\\\\frontend\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext({\n  user: null,\n  loading: true,\n  error: null,\n  login: () => {},\n  logout: () => {},\n  register: () => {},\n  updateProfile: () => {},\n  isAuthenticated: false,\n  isAdmin: false,\n  clearError: () => {},\n  getToken: () => null\n});\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const getToken = useCallback(() => localStorage.getItem('token'), []);\n  const checkAuthStatus = useCallback(async () => {\n    try {\n      const token = getToken();\n      const storedUser = localStorage.getItem('user');\n      if (!token || !storedUser) {\n        setLoading(false);\n        return;\n      }\n      const parsedUser = JSON.parse(storedUser);\n      const response = await fetch('http://localhost:5000/api/user/profile', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Session expired');\n      }\n      const data = await response.json();\n      setUser(data.user || parsedUser);\n    } catch (err) {\n      console.error('Auth check failed:', err);\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      setUser(null);\n      navigate('/login');\n    } finally {\n      setLoading(false);\n    }\n  }, [navigate, getToken]);\n  useEffect(() => {\n    checkAuthStatus();\n  }, [checkAuthStatus]);\n  const login = async credentials => {\n    try {\n      setError(null);\n      setLoading(true);\n      const response = await fetch('http://localhost:5000/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(credentials)\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Login failed');\n      }\n\n      // Store both token and user data\n      localStorage.setItem('token', data.token);\n      localStorage.setItem('user', JSON.stringify(data.user));\n      setUser(data.user);\n\n      // Navigate based on user role\n      if (data.user.isAdmin) {\n        navigate('/admin');\n      } else {\n        navigate('/dashboard');\n      }\n      return data;\n    } catch (err) {\n      setError(err.message);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const register = async userData => {\n    try {\n      setError(null);\n      setLoading(true);\n      const formData = new FormData();\n      Object.keys(userData).forEach(key => {\n        if (userData[key] !== null && userData[key] !== undefined) {\n          if (key === 'profileImage' && userData[key] instanceof File) {\n            formData.append('profileImage', userData[key]);\n          } else {\n            formData.append(key, userData[key]);\n          }\n        }\n      });\n      const response = await fetch('http://localhost:5000/api/register', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Registration failed');\n      }\n      navigate('/login', {\n        state: {\n          message: 'Registration successful! Please login.',\n          type: 'success'\n        }\n      });\n      return data;\n    } catch (err) {\n      setError(err.message);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const updateProfile = async profileData => {\n    try {\n      setError(null);\n      setLoading(true);\n      const token = getToken();\n      if (!token) {\n        throw new Error('Authentication required');\n      }\n      const formData = new FormData();\n      Object.keys(profileData).forEach(key => {\n        if (profileData[key] !== null && profileData[key] !== undefined) {\n          if (key === 'profileImage' && profileData[key] instanceof File) {\n            formData.append('profileImage', profileData[key]);\n          } else {\n            formData.append(key, profileData[key]);\n          }\n        }\n      });\n      const response = await fetch('http://localhost:5000/api/user/profile', {\n        method: 'PUT',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        },\n        body: formData\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Failed to update profile');\n      }\n      const updatedUser = {\n        ...user,\n        ...data.user\n      };\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n      setUser(updatedUser);\n      return data;\n    } catch (err) {\n      setError(err.message);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = useCallback(() => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n    navigate('/login');\n  }, [navigate]);\n  const clearError = () => setError(null);\n  const value = {\n    user,\n    loading,\n    error,\n    login,\n    logout,\n    register,\n    updateProfile,\n    clearError,\n    getToken,\n    isAuthenticated: !!user,\n    isAdmin: (user === null || user === void 0 ? void 0 : user.isAdmin) || false\n  };\n\n  // Loading spinner\n  if (loading && !user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-12 w-12 border-4 border-blue-600 border-t-transparent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook for using auth context\n_s(AuthProvider, \"pB1Rp7rp11ei++izwxEoTj3iIAE=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = React.useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useCallback","useNavigate","jsxDEV","_jsxDEV","AuthContext","user","loading","error","login","logout","register","updateProfile","isAuthenticated","isAdmin","clearError","getToken","AuthProvider","children","_s","setUser","setLoading","setError","navigate","localStorage","getItem","checkAuthStatus","token","storedUser","parsedUser","JSON","parse","response","fetch","headers","ok","Error","data","json","err","console","removeItem","credentials","method","body","stringify","message","setItem","userData","formData","FormData","Object","keys","forEach","key","undefined","File","append","state","type","profileData","updatedUser","value","className","fileName","_jsxFileName","lineNumber","columnNumber","Provider","_c","useAuth","_s2","context","useContext","$RefreshReg$"],"sources":["C:/Users/Asus/Desktop/cms/manish/manish1/frontend/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport const AuthContext = createContext({\r\n  user: null,\r\n  loading: true,\r\n  error: null,\r\n  login: () => {},\r\n  logout: () => {},\r\n  register: () => {},\r\n  updateProfile: () => {},\r\n  isAuthenticated: false,\r\n  isAdmin: false,\r\n  clearError: () => {},\r\n  getToken: () => null\r\n});\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  const getToken = useCallback(() => localStorage.getItem('token'), []);\r\n\r\n  const checkAuthStatus = useCallback(async () => {\r\n    try {\r\n      const token = getToken();\r\n      const storedUser = localStorage.getItem('user');\r\n      \r\n      if (!token || !storedUser) {\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      const parsedUser = JSON.parse(storedUser);\r\n      const response = await fetch('http://localhost:5000/api/user/profile', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Session expired');\r\n      }\r\n\r\n      const data = await response.json();\r\n      setUser(data.user || parsedUser);\r\n    } catch (err) {\r\n      console.error('Auth check failed:', err);\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      setUser(null);\r\n      navigate('/login');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [navigate, getToken]);\r\n\r\n  useEffect(() => {\r\n    checkAuthStatus();\r\n  }, [checkAuthStatus]);\r\n\r\n  const login = async (credentials) => {\r\n    try {\r\n      setError(null);\r\n      setLoading(true);\r\n\r\n      const response = await fetch('http://localhost:5000/api/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(credentials)\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Login failed');\r\n      }\r\n\r\n      // Store both token and user data\r\n      localStorage.setItem('token', data.token);\r\n      localStorage.setItem('user', JSON.stringify(data.user));\r\n      setUser(data.user);\r\n\r\n      // Navigate based on user role\r\n      if (data.user.isAdmin) {\r\n        navigate('/admin');\r\n      } else {\r\n        navigate('/dashboard');\r\n      }\r\n\r\n      return data;\r\n    } catch (err) {\r\n      setError(err.message);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      setError(null);\r\n      setLoading(true);\r\n\r\n      const formData = new FormData();\r\n      Object.keys(userData).forEach(key => {\r\n        if (userData[key] !== null && userData[key] !== undefined) {\r\n          if (key === 'profileImage' && userData[key] instanceof File) {\r\n            formData.append('profileImage', userData[key]);\r\n          } else {\r\n            formData.append(key, userData[key]);\r\n          }\r\n        }\r\n      });\r\n\r\n      const response = await fetch('http://localhost:5000/api/register', {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Registration failed');\r\n      }\r\n\r\n      navigate('/login', { \r\n        state: { \r\n          message: 'Registration successful! Please login.',\r\n          type: 'success'\r\n        }\r\n      });\r\n\r\n      return data;\r\n    } catch (err) {\r\n      setError(err.message);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateProfile = async (profileData) => {\r\n    try {\r\n      setError(null);\r\n      setLoading(true);\r\n\r\n      const token = getToken();\r\n      if (!token) {\r\n        throw new Error('Authentication required');\r\n      }\r\n\r\n      const formData = new FormData();\r\n      Object.keys(profileData).forEach(key => {\r\n        if (profileData[key] !== null && profileData[key] !== undefined) {\r\n          if (key === 'profileImage' && profileData[key] instanceof File) {\r\n            formData.append('profileImage', profileData[key]);\r\n          } else {\r\n            formData.append(key, profileData[key]);\r\n          }\r\n        }\r\n      });\r\n\r\n      const response = await fetch('http://localhost:5000/api/user/profile', {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        },\r\n        body: formData\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Failed to update profile');\r\n      }\r\n\r\n      const updatedUser = { ...user, ...data.user };\r\n      localStorage.setItem('user', JSON.stringify(updatedUser));\r\n      setUser(updatedUser);\r\n\r\n      return data;\r\n    } catch (err) {\r\n      setError(err.message);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = useCallback(() => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    setUser(null);\r\n    navigate('/login');\r\n  }, [navigate]);\r\n\r\n  const clearError = () => setError(null);\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    error,\r\n    login,\r\n    logout,\r\n    register,\r\n    updateProfile,\r\n    clearError,\r\n    getToken,\r\n    isAuthenticated: !!user,\r\n    isAdmin: user?.isAdmin || false,\r\n  };\r\n\r\n  // Loading spinner\r\n  if (loading && !user) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"flex flex-col items-center gap-4\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-4 border-blue-600 border-t-transparent\"></div>\r\n          <p className=\"text-gray-600\">Loading...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook for using auth context\r\nexport const useAuth = () => {\r\n  const context = React.useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default AuthProvider;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}