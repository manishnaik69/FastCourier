{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\cms\\\\manish\\\\manish1\\\\frontend\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext({\n  user: null,\n  loading: true,\n  error: null,\n  login: () => {},\n  logout: () => {},\n  register: () => {},\n  updateProfile: () => {},\n  isAuthenticated: false,\n  isAdmin: false,\n  clearError: () => {}\n});\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n  const checkAuthStatus = () => {\n    const token = localStorage.getItem('token');\n    const storedUser = localStorage.getItem('user');\n    if (!token || !storedUser) {\n      setUser(null);\n      setLoading(false);\n      navigate('/login');\n      return;\n    }\n    try {\n      const parsedUser = JSON.parse(storedUser);\n      setUser(parsedUser);\n      setLoading(false);\n    } catch (err) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      setUser(null);\n      setLoading(false);\n      navigate('/login');\n    }\n  };\n  const login = async credentials => {\n    try {\n      setError(null);\n      setLoading(true);\n      const response = await fetch('http://localhost:5000/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(credentials)\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Login failed');\n      }\n\n      // Set up user data\n      const userData = {\n        ...data.user,\n        isAdmin: data.user.isAdmin || false\n      };\n      localStorage.setItem('token', data.token);\n      localStorage.setItem('user', JSON.stringify(userData));\n      setUser(userData);\n      toast.success('Login successful');\n      if (userData.isAdmin) {\n        navigate('/admin/dashboard');\n      } else {\n        navigate('/dashboard');\n      }\n      return data;\n    } catch (err) {\n      setError(err.message);\n      toast.error(err.message || 'Login failed');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n    navigate('/login', {\n      replace: true\n    });\n  };\n  const register = async userData => {\n    try {\n      setError(null);\n      setLoading(true);\n      const formData = new FormData();\n      Object.keys(userData).forEach(key => {\n        if (userData[key] !== null && userData[key] !== undefined) {\n          if (key === 'profileImage' && userData[key] instanceof File) {\n            formData.append('profileImage', userData[key]);\n          } else {\n            formData.append(key, userData[key]);\n          }\n        }\n      });\n      const response = await fetch('http://localhost:5000/api/register', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Registration failed');\n      }\n      toast.success('Registration successful! Please login.');\n      navigate('/login', {\n        state: {\n          message: 'Registration successful! Please login.',\n          type: 'success'\n        }\n      });\n      return data;\n    } catch (err) {\n      setError(err.message);\n      toast.error(err.message);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const updateProfile = async profileData => {\n    try {\n      setError(null);\n      setLoading(true);\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('Authentication required');\n      }\n      const formData = new FormData();\n      Object.keys(profileData).forEach(key => {\n        if (profileData[key] !== null && profileData[key] !== undefined) {\n          if (key === 'profileImage' && profileData[key] instanceof File) {\n            formData.append('profileImage', profileData[key]);\n          } else {\n            formData.append(key, profileData[key]);\n          }\n        }\n      });\n      const response = await fetch('http://localhost:5000/api/user/profile', {\n        method: 'PUT',\n        headers: {\n          'Authorization': token\n        },\n        body: formData\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Failed to update profile');\n      }\n      const updatedUser = {\n        ...user,\n        ...data.user\n      };\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n      setUser(updatedUser);\n      return data;\n    } catch (err) {\n      setError(err.message);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const clearError = () => {\n    setError(null);\n  };\n  const value = {\n    user,\n    loading,\n    error,\n    login,\n    logout,\n    register,\n    updateProfile,\n    clearError,\n    isAuthenticated: !!user,\n    isAdmin: (user === null || user === void 0 ? void 0 : user.isAdmin) || false\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"d1+zLFPuYCTHzOWgvgMVqQqBcrg=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = React.useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useNavigate","toast","jsxDEV","_jsxDEV","AuthContext","user","loading","error","login","logout","register","updateProfile","isAuthenticated","isAdmin","clearError","AuthProvider","children","_s","setUser","setLoading","setError","navigate","checkAuthStatus","token","localStorage","getItem","storedUser","parsedUser","JSON","parse","err","removeItem","credentials","response","fetch","method","headers","body","stringify","data","json","ok","Error","message","userData","setItem","success","replace","formData","FormData","Object","keys","forEach","key","undefined","File","append","state","type","profileData","updatedUser","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","useContext","$RefreshReg$"],"sources":["C:/Users/Asus/Desktop/cms/manish/manish1/frontend/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport toast from 'react-hot-toast';\r\n\r\nexport const AuthContext = createContext({\r\n  user: null,\r\n  loading: true,\r\n  error: null,\r\n  login: () => {},\r\n  logout: () => {},\r\n  register: () => {},\r\n  updateProfile: () => {},\r\n  isAuthenticated: false,\r\n  isAdmin: false,\r\n  clearError: () => {}\r\n});\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    checkAuthStatus();\r\n  }, []);\r\n\r\n  const checkAuthStatus = () => {\r\n    const token = localStorage.getItem('token');\r\n    const storedUser = localStorage.getItem('user');\r\n\r\n    if (!token || !storedUser) {\r\n      setUser(null);\r\n      setLoading(false);\r\n      navigate('/login');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const parsedUser = JSON.parse(storedUser);\r\n      setUser(parsedUser);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      setUser(null);\r\n      setLoading(false);\r\n      navigate('/login');\r\n    }\r\n  };\r\n\r\n  const login = async (credentials) => {\r\n    try {\r\n      setError(null);\r\n      setLoading(true);\r\n\r\n      const response = await fetch('http://localhost:5000/api/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(credentials)\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Login failed');\r\n      }\r\n\r\n      // Set up user data\r\n      const userData = {\r\n        ...data.user,\r\n        isAdmin: data.user.isAdmin || false\r\n      };\r\n\r\n      localStorage.setItem('token', data.token);\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n      setUser(userData);\r\n\r\n      toast.success('Login successful');\r\n\r\n      if (userData.isAdmin) {\r\n        navigate('/admin/dashboard');\r\n      } else {\r\n        navigate('/dashboard');\r\n      }\r\n\r\n      return data;\r\n    } catch (err) {\r\n      setError(err.message);\r\n      toast.error(err.message || 'Login failed');\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    setUser(null);\r\n    navigate('/login', { replace: true });\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      setError(null);\r\n      setLoading(true);\r\n\r\n      const formData = new FormData();\r\n      Object.keys(userData).forEach(key => {\r\n        if (userData[key] !== null && userData[key] !== undefined) {\r\n          if (key === 'profileImage' && userData[key] instanceof File) {\r\n            formData.append('profileImage', userData[key]);\r\n          } else {\r\n            formData.append(key, userData[key]);\r\n          }\r\n        }\r\n      });\r\n\r\n      const response = await fetch('http://localhost:5000/api/register', {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Registration failed');\r\n      }\r\n\r\n      toast.success('Registration successful! Please login.');\r\n      navigate('/login', { \r\n        state: { \r\n          message: 'Registration successful! Please login.',\r\n          type: 'success'\r\n        }\r\n      });\r\n\r\n      return data;\r\n    } catch (err) {\r\n      setError(err.message);\r\n      toast.error(err.message);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateProfile = async (profileData) => {\r\n    try {\r\n      setError(null);\r\n      setLoading(true);\r\n\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        throw new Error('Authentication required');\r\n      }\r\n\r\n      const formData = new FormData();\r\n      Object.keys(profileData).forEach(key => {\r\n        if (profileData[key] !== null && profileData[key] !== undefined) {\r\n          if (key === 'profileImage' && profileData[key] instanceof File) {\r\n            formData.append('profileImage', profileData[key]);\r\n          } else {\r\n            formData.append(key, profileData[key]);\r\n          }\r\n        }\r\n      });\r\n\r\n      const response = await fetch('http://localhost:5000/api/user/profile', {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Authorization': token\r\n        },\r\n        body: formData\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Failed to update profile');\r\n      }\r\n\r\n      const updatedUser = { ...user, ...data.user };\r\n      localStorage.setItem('user', JSON.stringify(updatedUser));\r\n      setUser(updatedUser);\r\n\r\n      return data;\r\n    } catch (err) {\r\n      setError(err.message);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    error,\r\n    login,\r\n    logout,\r\n    register,\r\n    updateProfile,\r\n    clearError,\r\n    isAuthenticated: !!user,\r\n    isAdmin: user?.isAdmin || false\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = React.useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default AuthProvider;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}