{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\cms\\\\manish\\\\manish1\\\\frontend\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authService } from '../services/api';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n  const checkAuthStatus = async () => {\n    try {\n      const token = localStorage.getItem('authToken');\n      if (!token) {\n        setLoading(false);\n        return;\n      }\n\n      // Add your authentication check logic here\n      const response = await fetch('http://localhost:5000/api/profile', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setUser(data);\n      } else {\n        localStorage.removeItem('authToken');\n      }\n    } catch (error) {\n      console.error('Auth check failed:', error);\n      localStorage.removeItem('authToken');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      const {\n        user,\n        token\n      } = await authService.login({\n        email,\n        password\n      });\n      setUser(user);\n      navigate(user.isAdmin ? '/admin/dashboard' : '/dashboard');\n      return user;\n    } catch (error) {\n      throw error;\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await authService.register(userData);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  };\n  const logout = () => {\n    authService.logout();\n    setUser(null);\n    navigate('/login');\n  };\n\n  // Role-based authentication helpers\n  const isAdmin = () => (user === null || user === void 0 ? void 0 : user.isAdmin) || false;\n  const isSuperAdmin = () => (user === null || user === void 0 ? void 0 : user.role) === 'super_admin';\n  const isAuthenticated = () => !!user;\n  const value = {\n    user,\n    loading,\n    login,\n    logout,\n    register,\n    isAdmin,\n    isSuperAdmin,\n    isAuthenticated\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"lk6viekuCMMpYORkLYLEq0Wsfds=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authService","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","navigate","checkAuthStatus","token","localStorage","getItem","response","fetch","headers","Authorization","ok","data","json","removeItem","error","console","login","email","password","isAdmin","register","userData","logout","isSuperAdmin","role","isAuthenticated","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/Asus/Desktop/cms/manish/manish1/frontend/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { authService } from '../services/api';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst AuthContext = createContext(null);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    checkAuthStatus();\r\n  }, []);\r\n\r\n  const checkAuthStatus = async () => {\r\n    try {\r\n      const token = localStorage.getItem('authToken');\r\n      if (!token) {\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      // Add your authentication check logic here\r\n      const response = await fetch('http://localhost:5000/api/profile', {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setUser(data);\r\n      } else {\r\n        localStorage.removeItem('authToken');\r\n      }\r\n    } catch (error) {\r\n      console.error('Auth check failed:', error);\r\n      localStorage.removeItem('authToken');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const { user, token } = await authService.login({ email, password });\r\n      setUser(user);\r\n      navigate(user.isAdmin ? '/admin/dashboard' : '/dashboard');\r\n      return user;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      const response = await authService.register(userData);\r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    authService.logout();\r\n    setUser(null);\r\n    navigate('/login');\r\n  };\r\n\r\n  // Role-based authentication helpers\r\n  const isAdmin = () => user?.isAdmin || false;\r\n  const isSuperAdmin = () => user?.role === 'super_admin';\r\n  const isAuthenticated = () => !!user;\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    login,\r\n    logout,\r\n    register,\r\n    isAdmin,\r\n    isSuperAdmin,\r\n    isAuthenticated\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}