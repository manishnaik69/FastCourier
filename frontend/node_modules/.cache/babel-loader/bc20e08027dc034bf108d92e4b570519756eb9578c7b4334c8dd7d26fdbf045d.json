{"ast":null,"code":"import api from './api';\nconst courierService = {\n  createCourier: async formData => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('No authentication token found');\n      }\n      const response = await fetch('http://localhost:5000/api/courier', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        },\n        body: formData // Don't set Content-Type for FormData\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to create courier');\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Create courier error:', error);\n      throw new Error(error.message || 'Failed to create courier');\n    }\n  }\n\n  // Other methods...\n};\nexport default courierService;","map":{"version":3,"names":["api","courierService","createCourier","formData","token","localStorage","getItem","Error","response","fetch","method","headers","body","ok","errorData","json","message","error","console"],"sources":["C:/Users/Asus/Desktop/cms/manish/manish1/frontend/src/services/courierService.js"],"sourcesContent":["import api from './api';\r\n\r\nconst courierService = {\r\n  createCourier: async (formData) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        throw new Error('No authentication token found');\r\n      }\r\n\r\n      const response = await fetch('http://localhost:5000/api/courier', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        },\r\n        body: formData // Don't set Content-Type for FormData\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || 'Failed to create courier');\r\n      }\r\n\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('Create courier error:', error);\r\n      throw new Error(error.message || 'Failed to create courier');\r\n    }\r\n  },\r\n\r\n  // Other methods...\r\n};\r\n\r\nexport default courierService;"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,MAAMC,cAAc,GAAG;EACrBC,aAAa,EAAE,MAAOC,QAAQ,IAAK;IACjC,IAAI;MACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI,CAACF,KAAK,EAAE;QACV,MAAM,IAAIG,KAAK,CAAC,+BAA+B,CAAC;MAClD;MAEA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;QAChEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,eAAe,EAAE,UAAUP,KAAK;QAClC,CAAC;QACDQ,IAAI,EAAET,QAAQ,CAAC;MACjB,CAAC,CAAC;MAEF,IAAI,CAACK,QAAQ,CAACK,EAAE,EAAE;QAChB,MAAMC,SAAS,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;QACvC,MAAM,IAAIR,KAAK,CAACO,SAAS,CAACE,OAAO,IAAI,0BAA0B,CAAC;MAClE;MAEA,OAAO,MAAMR,QAAQ,CAACO,IAAI,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,MAAM,IAAIV,KAAK,CAACU,KAAK,CAACD,OAAO,IAAI,0BAA0B,CAAC;IAC9D;EACF;;EAEA;AACF,CAAC;AAED,eAAef,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}